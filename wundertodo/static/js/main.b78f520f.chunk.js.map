{"version":3,"sources":["components/tipBox/views/tipBox.js","register/views/register.js","config/api.js","register/actions.js","register/actionTypes.js","components/formCheck/strategies.js","components/formCheck/validator.js","register/views/registerContainer.js","config/baseUrl.js","login/views/login.js","login/actions.js","login/actionTypes.js","login/views/loginContainer.js","Store.js","register/reducer.js","register/status.js","login/reducer.js","login/status.js","navigation/views/searchToolbar/views/searchToolbar.js","navigation/views/userToolbar/views/userToolbar.js","navigation/views/listsToolbar/views/listsToolbar.js","navigation/views/createToolbar/views/createToolbar.js","navigation/views/navigation.js","content/views/content.js","App.js","serviceWorker.js","index.js"],"names":["TipBox","react_default","a","createElement","className","this","props","value","Component","Register","_ref","onNameInputChange","onEmailInputChange","onPasswordInputChange","nameInputValue","emailInputValue","passwordInputValue","nameInputErrorMsg","emailInputErrorMsg","passwordInputErrorMsg","onSubmit","type","placeholder","onChange","tipBox","onClick","href","login","path","params","des","regist","registFailure","err","strategies","isNonEmpty","errorMsg","minLength","length","maxLength","isMobile","test","isEmail","Validator","Object","classCallCheck","cache","rules","self","forEach","item","index","strategyArr","strategy","split","push","shift","unshift","apply","toConsumableArray","i","len","msg","RegisterContainer","_this","possibleConstructorReturn","getPrototypeOf","arguments","bind","assertThisInitialized","setErrorMsg","state","_this$context$store$g","context","store","getState","register","status","isRegisted","history","replace","key","setState","defineProperty","event","target","trim","validator","add","start","_this$state","dispatch","username","email","password","fetch","concat","apis","method","headers","Content-Type","body","JSON","stringify","then","res","json","resJson","registSuccess","catch","sessionStorage","isUserLogined","unsubscribe","subscribe","contextTypes","PropTypes","object","Login","onEmailInputFocus","onEmailInputBlur","emailPlaceholderClass","onPasswordInputFocus","onPasswordInputBlur","passwordPlaceholderClass","onSignin","autoFocus","onFocus","onBlur","loginFailure","error","LoginContainer","emailInputFocused","passwordInputFocused","isLogined","_this$context$store$g2","cryemail","crypwd","setItem","alert","console","log","loginSuccess","views_login","reducer","combineReducers","undefined","action","objectSpread","createStore","applyMiddleware","thunkMiddleware","SearchTollbar","UserToolbar","ListsToolbar","CreateToolbar","Navigation","searchToolbar","userToolbar","listsToolbar","createToolbar","Content","Main","navigation","content","routes","component","exact","App","map","Route","Boolean","window","location","hostname","match","ReactDOM","render","es","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sjBAYeA,0LANX,OACEC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWC,KAAKC,MAAMC,cAHvBC,cCqENC,EAtEE,SAAAC,GAAA,IACfC,EADeD,EACfC,kBAAmBC,EADJF,EACIE,mBAAoBC,EADxBH,EACwBG,sBACvCC,EAFeJ,EAEfI,eAAgBC,EAFDL,EAECK,gBAAiBC,EAFlBN,EAEkBM,mBACjCC,EAHeP,EAGfO,kBAAmBC,EAHJR,EAGIQ,mBAAoBC,EAHxBT,EAGwBS,sBACvCC,EAJeV,EAIfU,SAJe,OAMfnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACpBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,4BAEKH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0CACbH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,OACLjB,UAAU,0CACVkB,YAAY,OACZC,SAAUZ,EACVJ,MAAOO,IAETb,EAAAC,EAAAC,cAAA,OAAKC,UAAiC,KAAtBa,EAA2B,sCAAwC,8CACjFhB,EAAAC,EAAAC,cAACqB,EAAD,CAAQjB,MAAOU,MAGnBhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2CACbH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,OACLjB,UAAU,2CACVkB,YAAY,QACZC,SAAUX,EACVL,MAAOQ,IAETd,EAAAC,EAAAC,cAAA,OAAKC,UAAkC,KAAvBc,EAA4B,uCAAyC,+CACnFjB,EAAAC,EAAAC,cAACqB,EAAD,CAAQjB,MAAOW,MAGnBjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,WACLjB,UAAU,8CACVkB,YAAY,WACZC,SAAUV,EACVN,MAAOS,IAETf,EAAAC,EAAAC,cAAA,OAAKC,UAAqC,KAA1Be,EAA+B,0CAA4C,kDACzFlB,EAAAC,EAAAC,cAACqB,EAAD,CAAQjB,MAAOY,MAGnBlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,UACEkB,KAAK,SACLjB,UAAU,sBACVqB,QAASL,GAHX,yBAOGnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACpBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAhB,2BAEEH,EAAAC,EAAAC,cAAA,KAAGuB,KAAK,YAAR,gBClEUC,EAAQ,CACnBC,KAAM,cACNC,OAAQ,CAAC,WAAY,YACrBC,IAAK,4BAGMC,EAAS,CACpBH,KAAM,eACNC,OAAQ,CAAC,WAAY,QAAS,YAC9BC,IAAK,4BCKDE,EAAgB,SAACC,GAAD,MAAU,CAC9BZ,KCb4B,iBDc5BY,gBEIaC,EApBI,CACjBC,WADiB,SACN5B,EAAO6B,GAChB,GAAc,KAAV7B,EAAc,OAAO6B,GAE3BC,UAJiB,SAIP9B,EAAO+B,EAAQF,GACvB,GAAI7B,EAAM+B,OAASA,EAAQ,OAAOF,GAEpCG,UAPiB,SAOPhC,EAAO+B,EAAQF,GACvB,GAAI7B,EAAM+B,OAASA,EAAQ,OAAOF,GAEpCI,SAViB,SAURjC,EAAO6B,GACd,IAAK,wBAAwBK,KAAKlC,GAAQ,OAAO6B,GAEnDM,QAbiB,SAaTnC,EAAO6B,GACb,IAAK,mCAAmCK,KAAKlC,GAC3C,OAAO6B,ICiBEO,aA7Bb,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAvC,KAAAsC,GACbtC,KAAKyC,MAAQ,mDAGXvC,EAAOwC,GACT,IAAMC,EAAO3C,KAEb0C,EAAME,QAAQ,SAACC,EAAMC,IACnB,SAACD,GACN,IAAME,EAAcF,EAAKG,SAASC,MAAM,KAClClB,EAAWc,EAAKd,SACtBY,EAAKF,MAAMS,KAAK,WACd,IAAMF,EAAWD,EAAYI,QAG7B,OAFAJ,EAAYK,QAAQlD,GACpB6C,EAAYG,KAAKnB,GACVF,EAAWmB,GAAXK,MAAAxB,EAAUU,OAAAe,EAAA,EAAAf,CAAcQ,MAP5B,CASGF,qCAKL,IAAK,IAAIU,EAAI,EAAGC,EAAMxD,KAAKyC,MAAMR,OAAQsB,EAAIC,EAAKD,IAAK,CACrD,IAAME,EAAMzD,KAAKyC,MAAMc,KACvB,GAAIE,EAAK,OAAOA,YCnBhBC,qBACJ,SAAAA,IAAc,IAAAC,EAAA,OAAApB,OAAAC,EAAA,EAAAD,CAAAvC,KAAA0D,IACZC,EAAApB,OAAAqB,EAAA,EAAArB,CAAAvC,KAAAuC,OAAAsB,EAAA,EAAAtB,CAAAmB,GAAAL,MAAArD,KAAS8D,aAEJ5C,SAAWyC,EAAKzC,SAAS6C,KAAdxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KAChBA,EAAKM,YAAcN,EAAKM,YAAYF,KAAjBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KACnBA,EAAKrD,kBAAoBqD,EAAKrD,kBAAkByD,KAAvBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KACzBA,EAAKpD,mBAAqBoD,EAAKpD,mBAAmBwD,KAAxBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KAC1BA,EAAKnD,sBAAwBmD,EAAKnD,sBAAsBuD,KAA3BxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KAC7BA,EAAK5C,SAAW4C,EAAK5C,SAASgD,KAAdxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KAEhBA,EAAKO,MAAQ,CACXzD,eAAgB,GAChBC,gBAAiB,GACjBC,mBAAoB,GACpBC,kBAAmB,GACnBC,mBAAoB,GACpBC,sBAAuB,GACvBiB,SAAU,MAjBA4B,0EAqBH,IAAAQ,EACoBnE,KAAKoE,QAAQC,MAAMC,WAAWC,SAApDC,EADEL,EACFK,OAAQC,EADNN,EACMM,WAEA,YAAXD,GAAwBC,GAAYzE,KAAKC,MAAMyE,QAAQC,QAAQ,8CAGzDC,EAAK7C,GACf,OAAIA,OACF/B,KAAK6E,SAALtC,OAAAuC,EAAA,EAAAvC,CAAA,GACGqC,EAAM7C,SAIT/B,KAAK6E,SAALtC,OAAAuC,EAAA,EAAAvC,CAAA,GACGqC,EAAM,+CAMKG,GAChB/E,KAAK6E,SAAS,CACZpE,eAAgBsE,EAAMC,OAAO9E,MAAM+E,SAGrC,IAAMC,EAAY,IAAI5C,EACtB4C,EAAUC,IAAIJ,EAAMC,OAAO9E,MAAM+E,OAAQ,CAAC,CACxCjC,SAAU,aACVjB,SAAU,wCACT,CACDiB,SAAU,eACVjB,SAAU,iDACT,CACDiB,SAAU,gBACVjB,SAAU,oDAGZ,IAAMA,EAAWmD,EAAUE,QAC3BpF,KAAKiE,YAAY,oBAAqBlC,8CAIrBgD,GACjB/E,KAAK6E,SAAS,CACZnE,gBAAiBqE,EAAMC,OAAO9E,MAAM+E,SAGtC,IAAMC,EAAY,IAAI5C,EACtB4C,EAAUC,IAAIJ,EAAMC,OAAO9E,MAAM+E,OAAQ,CAAC,CACxCjC,SAAU,aACVjB,SAAW,kCACV,CACDiB,SAAU,UACVjB,SAAU,sDAGZ,IAAMA,EAAWmD,EAAUE,QAC3BpF,KAAKiE,YAAY,qBAAsBlC,iDAInBgD,GACpB/E,KAAK6E,SAAS,CACZlE,mBAAoBoE,EAAMC,OAAO9E,MAAM+E,SAGzC,IAAMC,EAAY,IAAI5C,EACtB4C,EAAUC,IAAIJ,EAAMC,OAAO9E,MAAM+E,OAAQ,CAAC,CACxCjC,SAAU,aACVjB,SAAU,kCACT,CACDiB,SAAU,eACVjB,SAAU,6DACT,CACDiB,SAAU,gBACVjB,SAAU,gEAGZ,IAAMA,EAAWmD,EAAUE,QAC3BpF,KAAKiE,YAAY,wBAAyBlC,sCAIjC,IAAAsD,EAGLrF,KAAKkE,MADPtD,EAFOyE,EAEPzE,kBAAmBC,EAFZwE,EAEYxE,mBAAoBC,EAFhCuE,EAEgCvE,sBAMzC,GAJgD,KAAtBF,GACwB,KAAvBC,GAC6B,KAA1BC,EAG5Bd,KAAKoE,QAAQC,MAAMiB,UJvGFC,EIwGfvF,KAAKkE,MAAMzD,eJxGc+E,EIyGhCxF,KAAKkE,MAAMxD,gBJzG4B+E,EI0GvCzF,KAAKkE,MAAMvD,mBJzGH,SAAC2E,GACNA,EAhByB,CAC3BtE,KCN4B,mBDuB1B0E,MAAK,GAAAC,OKtBO,yBLsBPA,OAAcC,EAAKlE,OAAOH,MAAQ,CACrCsE,OAAQ,OACRC,QAAS,CACdC,eAAgB,kCAEXC,KAAMC,KAAKC,UAAU,CAACX,WAAUC,QAAOC,eACtCU,KAAK,SAAAC,GACN,GAAmB,MAAfA,EAAI5B,OAAgB,OAAO4B,EAAIC,OAC9Bf,EAAS3D,OACbwE,KAAK,SAAAG,GACNhB,EAxBgB,SAACgB,GAAD,MAAc,CAClCtF,KCT4B,iBDU5BsF,WAsBaC,CAAcD,MACtBE,MAAM,SAAA5E,GACP0D,EAAS3D,EAAcC,cAhBP,IAAC2D,EAAUC,EAAOC,+CIiHhCgB,eAAeC,eACjB1G,KAAKC,MAAMyE,QAAQxB,KAAK,sCAM1B,OACEtD,EAAAC,EAAAC,cAACyE,EAAD,CACEjE,kBAAmBN,KAAKM,kBAC/BC,mBAAoBP,KAAKO,mBACzBC,sBAAuBR,KAAKQ,sBAC5BC,eAAgBT,KAAKkE,MAAMzD,eAC3BC,gBAAiBV,KAAKkE,MAAMxD,gBAC5BC,mBAAoBX,KAAKkE,MAAMvD,mBAC/BC,kBAAmBZ,KAAKkE,MAAMtD,kBAC9BC,mBAAoBb,KAAKkE,MAAMrD,mBAC/BC,sBAAuBd,KAAKkE,MAAMpD,sBAClCC,SAAUf,KAAKe,uDAMZf,KAAK6E,SAAS,CACZ8B,YAAa3G,KAAKoE,QAAQC,MAAMuC,UAAU5G,KAAKkB,mBArJrBf,cA0JhCuD,EAAkBmD,aAAe,CAC/BxC,MAAOyC,IAAUC,QAGJrD,gBEpGAsD,EAhED,SAAA3G,GAAA,IACZ4G,EADY5G,EACZ4G,kBAAmBC,EADP7G,EACO6G,iBACnB3G,EAFYF,EAEZE,mBAAoBG,EAFRL,EAEQK,gBAAiByG,EAFzB9G,EAEyB8G,sBACrCC,EAHY/G,EAGZ+G,qBAAsBC,EAHVhH,EAGUgH,oBACtB7G,EAJYH,EAIZG,sBAAuBG,EAJXN,EAIWM,mBAAoB2G,EAJ/BjH,EAI+BiH,yBAC3CC,EALYlH,EAKZkH,SALY,OAOZ3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACpBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAERH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,OACLwG,WAAS,EACTzH,UAAU,qCACV0H,QAASR,EACTS,OAAQR,EACRhG,SAAUX,EACVL,MAAOQ,IAETd,EAAAC,EAAAC,cAAA,QAAMC,UAAW,kDAAmDoH,GAApE,UAIFvH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,WACLjB,UAAU,wCACV0H,QAASL,EACTM,OAAQL,EACRnG,SAAUV,EACVN,MAAOS,IAETf,EAAAC,EAAAC,cAAA,QAAMC,UAAW,qDAAuDuH,GAAxE,aAIF1H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,UAAQkB,KAAK,SAASjB,UAAU,sBAAsBqB,QAASmG,GAA/D,YAIF3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,KACEuB,KAAK,aACLtB,UAAU,qCAFZ,yBAKAH,EAAAC,EAAAC,cAAA,KACEuB,KAAK,cACLtB,UAAU,uCAFZ,uBC3CU4H,EAAe,SAACC,GAAD,MAAY,CACtC5G,KCX2B,gBDY3B4G,UEPIC,qBACJ,SAAAA,IAAc,IAAAlE,EAAA,OAAApB,OAAAC,EAAA,EAAAD,CAAAvC,KAAA6H,IACZlE,EAAApB,OAAAqB,EAAA,EAAArB,CAAAvC,KAAAuC,OAAAsB,EAAA,EAAAtB,CAAAsF,GAAAxE,MAAArD,KAAS8D,aAEJ5C,SAAWyC,EAAKzC,SAAS6C,KAAdxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KAChBA,EAAKsD,kBAAoBtD,EAAKsD,kBAAkBlD,KAAvBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KACzBA,EAAKuD,iBAAmBvD,EAAKuD,iBAAiBnD,KAAtBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KACxBA,EAAKpD,mBAAqBoD,EAAKpD,mBAAmBwD,KAAxBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KAC1BA,EAAKyD,qBAAuBzD,EAAKyD,qBAAqBrD,KAA1BxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KAC5BA,EAAK0D,oBAAsB1D,EAAK0D,oBAAoBtD,KAAzBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KAC3BA,EAAKnD,sBAAwBmD,EAAKnD,sBAAsBuD,KAA3BxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KAC7BA,EAAK4D,SAAW5D,EAAK4D,SAASxD,KAAdxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAoB,KAEhBA,EAAKO,MAAQ,CACX4D,mBAAmB,EACnBC,sBAAsB,EACtBrH,gBAAiB,GACjBC,mBAAoB,IAhBVgD,0EAoBH,IAAAQ,EACoBnE,KAAKoE,QAAQC,MAAMC,WAAWhD,MAApDkD,EADEL,EACFK,OAAQwD,EADN7D,EACM6D,UACf,GAAe,YAAXxD,GAAwBwD,EAAW,KAAAC,EACAjI,KAAKoE,QAAQC,MAAMC,WAAWhD,MAA5DiE,EAD8B0C,EAC9B1C,SAAU2C,EADoBD,EACpBC,SAAUC,EADUF,EACVE,OAO3B,OANA1B,eAAe2B,QAAQ,iBAAiB,GACxC3B,eAAe2B,QAAQ,WAAY7C,GACnCkB,eAAe2B,QAAQ,WAAYF,GACnCzB,eAAe2B,QAAQ,SAAUD,QAEjCnI,KAAKC,MAAMyE,QAAQC,QAAQ,kDAM7B3E,KAAK6E,SAAS,CACZiD,mBAAmB,+CAKqB,KAAtC9H,KAAKkE,MAAMxD,gBAAgBuE,QAC/BjF,KAAK6E,SAAS,CACZiD,mBAAmB,+CAIJ/C,GACjB/E,KAAK6E,SAAS,CACZnE,gBAAiBqE,EAAMC,OAAO9E,uDAKhCF,KAAK6E,SAAS,CACZkD,sBAAsB,kDAKqB,KAAzC/H,KAAKkE,MAAMvD,mBAAmBsE,QAClCjF,KAAK6E,SAAS,CACZkD,sBAAsB,kDAIJhD,GACpB/E,KAAK6E,SAAS,CACZlE,mBAAoBoE,EAAMC,OAAO9E,2CAI1B,IF/DSsF,EAAOC,EE+DhBJ,EAILrF,KAAKkE,MAFPxD,EAFO2E,EAEP3E,gBACAC,EAHO0E,EAGP1E,mBAGF,GAAwB,KAApBD,GAAiD,KAAvBC,EAG5B,OAFA0H,MAAM,mDACNC,QAAQC,IAAI,8CAKdvI,KAAKoE,QAAQC,MAAMiB,UF5EDE,EE4EgB9E,EF5ET+E,EE4E0B9E,EF3E9C,SAAC2E,GAGNI,MAAK,GAAAC,OFpBO,yBEoBPA,OAAcC,EAAKtE,MAAMC,MAAQ,CACpCsE,OAAQ,OACRC,QAAS,CACdC,eAAgB,kCAEXC,KAAMC,KAAKC,UAAU,CAACV,QAAOC,eAC5BU,KAAK,SAAAC,GACN,GAAmB,MAAfA,EAAI5B,OAAgB,OAAO4B,EAAIC,OAC9Bf,EAASqC,OACbxB,KAAK,SAAAG,GACNhB,EAxBsB,SAACgB,GAAD,MAAc,CACxCtF,KCP2B,gBDQ3BsF,WAsBakC,CAAalC,MACrBE,MAAM,SAAAoB,GACPtC,EAASqC,EAAaC,sDEgEpBnB,eAAeC,eACjB1G,KAAKC,MAAMyE,QAAQxB,KAAK,sCAK1B,OACEtD,EAAAC,EAAAC,cAAC2I,EAAD,CACLxB,kBAAmBjH,KAAKiH,kBACxBC,iBAAkBlH,KAAKkH,iBACvB3G,mBAAoBP,KAAKO,mBACzBG,gBAAiBV,KAAKkE,MAAMxD,gBAC5ByG,sBAAuBnH,KAAKkE,MAAM4D,kBAAoB,SAAW,GACjEV,qBAAsBpH,KAAKoH,qBAC3BC,oBAAqBrH,KAAKqH,oBAC1B7G,sBAAuBR,KAAKQ,sBAC5BG,mBAAoBX,KAAKkE,MAAMvD,mBAC/B2G,yBAA0BtH,KAAKkE,MAAM6D,qBAAuB,SAAW,GACvER,SAAUvH,KAAKuH,uDAMZvH,KAAK6E,SAAS,CACZ8B,YAAa3G,KAAKoE,QAAQC,MAAMuC,UAAU5G,KAAKkB,mEAnHxBf,cA4H7B0H,EAAehB,aAAe,CAC5BxC,MAAOyC,IAAUC,QAGJc,QClITa,EAAUC,YAAgB,CAC9BpE,SCDa,WAA8C,IAA7CL,EAA6CJ,UAAA7B,OAAA,QAAA2G,IAAA9E,UAAA,GAAAA,UAAA,GAArC,CAACU,OCLF,WDK2BqE,EAAW/E,UAAA7B,OAAA,EAAA6B,UAAA,QAAA8E,EAC3D,OAAOC,EAAO7H,MACZ,IVP0B,iBUQxB,MAAO,CAACwD,OCRS,WDSnB,IVR0B,iBUSxB,OAAOjC,OAAAuG,EAAA,EAAAvG,CAAA,CACZiC,OCVsB,WDWnBqE,EAAOvC,SAEP,IVZ0B,iBUaxB,OAAO/D,OAAAuG,EAAA,EAAAvG,CAAA,CACZiC,OCdsB,WDenBqE,EAAOjB,OAEP,QACE,OAAO1D,IDbX5C,MGJa,WAA8C,IAA7C4C,EAA6CJ,UAAA7B,OAAA,QAAA2G,IAAA9E,UAAA,GAAAA,UAAA,GAArC,CAACU,OCHF,WDG2BqE,EAAW/E,UAAA7B,OAAA,EAAA6B,UAAA,QAAA8E,EAC3D,OAAOC,EAAO7H,MACZ,ILLyB,gBKMvB,MAAO,CAACwD,OCNS,WDOnB,ILNyB,gBKOvB,OAAOjC,OAAAuG,EAAA,EAAAvG,CAAA,CACZiC,OCRsB,WDSnBqE,EAAOvC,SAEP,ILVyB,gBKWvB,OAAO/D,OAAAuG,EAAA,EAAAvG,CAAA,CACLiC,OCZe,WDanBqE,EAAOjB,OAEP,QACE,OAAO1D,MHRE6E,cAAYL,EAASM,YAAgBC,sBKYrCC,0LAhBX,OACEtJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeiB,KAAK,UAEvCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAXYI,cCmBbgJ,0LAjBX,OACEvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,cACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BAZUI,cCQXiJ,0LANX,OACExJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,iCAHqBI,cCQZkJ,0LANX,OACEzJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,kCAHsBI,cCmBbmJ,0LAbX,OACE1J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACyJ,EAAD,MACA3J,EAAAC,EAAAC,cAAC0J,EAAD,MACA5J,EAAAC,EAAAC,cAAC2J,EAAD,MACA7J,EAAAC,EAAAC,cAAC4J,EAAD,eARsBvJ,cCEVwJ,mLANX,OACE/J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,4BAHgBI,aCShByJ,sMAEGnD,eAAeC,eAClB1G,KAAKC,MAAMyE,QAAQC,QAAQ,2CAM7B,OACE/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACpBH,EAAAC,EAAAC,cAAC+J,EAAD,MACAjK,EAAAC,EAAAC,cAACgK,EAAD,cAZkB3J,cAkBnByJ,EAAK/C,aAAe,CAClBxC,MAAOyC,IAAUC,QAGnB,IAAMgD,EAAS,CACb,CACExI,KAAM,YACNyI,UAAW5J,GAEb,CACEmB,KAAM,SACNyI,UAAWhD,GAEb,CACEiD,OAAO,EACP1I,KAAM,IACNyI,UAAWJ,IAyBAM,mLAnBX,OACEtK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAElBgK,EAAOI,IAAI,SAACtH,EAAMC,GAChB,OACElD,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CACLxF,IAAK9B,EACLmH,MAAOpH,EAAKoH,MACZ1I,KAAMsB,EAAKtB,KACXyI,UAAWnH,EAAKmH,sBAXA7J,aCrCEkK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP/K,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAUvG,MAAOA,GACfzE,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,KACEjL,EAAAC,EAAAC,cAACgL,EAAD,QAGJC,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhF,KAAK,SAAAiF,GACjCA,EAAaC","file":"static/js/main.b78f520f.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport './style.css';\n\nclass TipBox extends Component {\n  render() {\n    return (\n      <span className=\"tip-box\">{this.props.value}</span>\n    );\n  }\n}\n\nexport default TipBox;\n","import React from 'react';\nimport {view as TipBox} from '../../components/tipBox/';\n\nconst Register = ({\n  onNameInputChange, onEmailInputChange, onPasswordInputChange,\n  nameInputValue, emailInputValue, passwordInputValue,\n  nameInputErrorMsg, emailInputErrorMsg, passwordInputErrorMsg,\n  onSubmit\n}) => (\n  <div className=\"main\">\n    <div className=\"register\">\n      <div className=\"register-logo\">\n\t<i className=\"register-logo-icon\"></i>\n\t<h1 className=\"register-logo-title\">Get Wundertodo For Free</h1>\n      </div>\n      <div className=\"register-inner\">\n\t<div className=\"register-item register-name\">\n\t  <i className=\"register-item-icon register-name-icon\"></i>\n\t  <input\n\t    type=\"text\"\n\t    className=\"register-item-input register-name-input\"\n\t    placeholder=\"Name\" \n\t    onChange={onNameInputChange}\n\t    value={nameInputValue}\n\t  />\n\t  <div className={nameInputErrorMsg === '' ? \"register-item-tip register-name-tip\" : \"register-item-tip register-name-tip active\"}>\n\t    <TipBox value={nameInputErrorMsg} />\n\t  </div>\n\t</div>\n\t<div className=\"register-item register-email\">\n\t  <i className=\"register-item-icon register-email-icon\"></i>\n\t  <input\n\t    type=\"text\"\n\t    className=\"register-item-input register-email-input\"\n\t    placeholder=\"Email\" \n\t    onChange={onEmailInputChange}\n\t    value={emailInputValue}\n\t  />\n\t  <div className={emailInputErrorMsg === '' ? \"register-item-tip register-email-tip\" : \"register-item-tip register-email-tip active\"}>\n\t    <TipBox value={emailInputErrorMsg} />\n\t  </div>\n\t</div>\n\t<div className=\"register-item register-password\">\n\t  <i className=\"register-item-icon register-password-icon\"></i>\n\t  <input\n\t    type=\"password\"\n\t    className=\"register-item-input register-password-input\"\n\t    placeholder=\"Password\" \n\t    onChange={onPasswordInputChange}\n\t    value={passwordInputValue}\n\t  />\n\t  <div className={passwordInputErrorMsg === '' ? \"register-item-tip register-password-tip\" : \"register-item-tip register-password-tip active\"}>\n\t    <TipBox value={passwordInputErrorMsg} />\n\t  </div>\n\t</div>\n\t<div className=\"register-item register-submit\">\n\t  <button \n\t    type=\"button\" \n\t    className=\"register-submit-btn\" \n\t    onClick={onSubmit}>Create Free Account\n\t  </button>\n\t</div>\n      </div>\n      <div className=\"register-login\">\n\t<span className=\"register-login-text\">\n\t  Have an account already? \n\t  <a href=\"/#/login\">Sign in</a>\n\t</span>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Register;\n","export const login = {\n  path: '/todo/login',\n  params: ['username', 'password'],\n  des: '用户登录'\n};\n\nexport const regist = {\n  path: '/todo/regist',\n  params: ['username', 'email', 'password'],\n  des: '用户注册'\n};\n","import {\n  REGIST_STARTED, REGIST_SUCCESS, REGIST_FAILURE\n} from './actionTypes';\nimport {baseUrl, apis} from '../config/';\n\nconst registStarted = () => ({\n  type: REGIST_STARTED\n});\n\nconst registSuccess = (resJson) => ({\n  type: REGIST_SUCCESS,\n  resJson\n});\n\nconst registFailure = (err) => ({\n  type: REGIST_FAILURE,\n  err\n});\n\nexport const regist = (username, email, password) => {\n  return (dispatch) => {\n    dispatch(registStarted());\n\n    fetch(`${baseUrl}${apis.regist.path}`, {\n      method: 'POST',\n      headers: {\n\t'Content-Type': 'application/json;charset=UTF-8'\n      },\n      body: JSON.stringify({username, email, password})\n    }).then(res => {\n      if (res.status === 200) return res.json();\n      else dispatch(registFailure());\n    }).then(resJson => {\n      dispatch(registSuccess(resJson));\n    }).catch(err => {\n      dispatch(registFailure(err));\n    });\n  };\n};\n","export const REGIST_STARTED = 'REGIST/STARTED';\nexport const REGIST_SUCCESS = 'REGIST/SUCCESS';\nexport const REGIST_FAILURE = 'REGIST/FAILURE';\n","const strategies = {\n  isNonEmpty(value, errorMsg) {  // 验证是否为空\n    if (value === '') return errorMsg;\n  },\n  minLength(value, length, errorMsg) {  // 验证最小长度\n    if (value.length < length) return errorMsg;\n  },\n  maxLength(value, length, errorMsg) {  // 验证最大长度\n    if (value.length > length) return errorMsg;\n  },\n  isMobile(value, errorMsg) {  // 验证是否为 11 位手机号码\n    if (!/(^1[3|5|8][0-9]{9}$)/g.test(value)) return errorMsg;\n  },\n  isEmail(value, errorMsg) {\n    if (!/^(\\w-*\\.*)+@(\\w-?)+(\\.\\w{2,})+$/g.test(value)) {  // 验证邮箱是否合法\n      return errorMsg;\n    }\n  }\n};\n\nexport default strategies;\n","import strategies from './strategies';\n\nclass Validator {\n  constructor() {\n    this.cache = [];\n  }\n\n  add(value, rules) {  // 添加验证规则\n    const self = this;  // 保存当前 this\n\n    rules.forEach((item, index) => {\n      (item => {\n\tconst strategyArr = item.strategy.split(':');  // 把 strategy 和参数分开\n\tconst errorMsg = item.errorMsg;\n\tself.cache.push(() => {\n\t  const strategy = strategyArr.shift();  // 用户挑选的 strategy\n\t  strategyArr.unshift(value);  // 把 value 值添加经参数列表\n\t  strategyArr.push(errorMsg);  // 把 errorMsg 添加进参数列表\n\t  return strategies[strategy](...strategyArr);\n\t});\n      })(item);\n    });\n  }\n\n  start() {  // 开始校验\n    for (let i = 0, len = this.cache.length; i < len; i++) {\n      const msg = this.cache[i]();\n      if (msg) return msg;  // 若 msg 存在，则说明校验未通过\n    }\n  }\n}\n\nexport default Validator;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Register from './register';\nimport {regist} from '../actions';\nimport {Validator} from '../../components/formCheck/';\n\nimport './style.css';\n\nclass RegisterContainer extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onChange = this.onChange.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.onNameInputChange = this.onNameInputChange.bind(this);\n    this.onEmailInputChange = this.onEmailInputChange.bind(this);\n    this.onPasswordInputChange = this.onPasswordInputChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      nameInputValue: '',\n      emailInputValue: '',\n      passwordInputValue: '',\n      nameInputErrorMsg: '',\n      emailInputErrorMsg: '',\n      passwordInputErrorMsg: '',\n      errorMsg: null\n    };\n  }\n\n  onChange() {\n    const {status, isRegisted} = this.context.store.getState().register;\n\n    if (status === 'success' && isRegisted) this.props.history.replace('/login');\n  }\n\n  setErrorMsg(key, errorMsg) {  // 设置错误信息\n    if (errorMsg) {\n      this.setState({\n        [key]: errorMsg\n      });\n      return;\n    } else {\n      this.setState({\n        [key]: ''\n      });\n      return;\n    }\n  }\n\n  onNameInputChange(event) {\n    this.setState({\n      nameInputValue: event.target.value.trim()\n    });\n\n    const validator = new Validator();\n    validator.add(event.target.value.trim(), [{\n      strategy: 'isNonEmpty',\n      errorMsg: '请输入用户名'\n    }, {\n      strategy: 'minLength: 2',\n      errorMsg: '用户名应大于 2 位'\n    }, {\n      strategy: 'maxLength: 20',\n      errorMsg: '用户名应小于 20 位'\n    }]);\n\n    const errorMsg = validator.start();\n    this.setErrorMsg('nameInputErrorMsg', errorMsg);\n    return;\n  }\n\n  onEmailInputChange(event) {\n    this.setState({\n      emailInputValue: event.target.value.trim()\n    });\n\n    const validator = new Validator();\n    validator.add(event.target.value.trim(), [{\n      strategy: 'isNonEmpty',\n      errorMsg:  '请输入邮箱'\n    }, {\n      strategy: 'isEmail',\n      errorMsg: '请输入正确的邮箱'\n    }]);\n\n    const errorMsg = validator.start();\n    this.setErrorMsg('emailInputErrorMsg', errorMsg);\n    return;\n  }\n\n  onPasswordInputChange(event) {\n    this.setState({\n      passwordInputValue: event.target.value.trim()\n    });\n\n    const validator = new Validator();\n    validator.add(event.target.value.trim(), [{\n      strategy: 'isNonEmpty',\n      errorMsg: '请输入密码'\n    }, {\n      strategy: 'minLength: 8',\n      errorMsg: '密码长度应不小于 8 位'\n    }, {\n      strategy: 'maxLength: 16',\n      errorMsg: '密码长度应不大于 16 位'\n    }]);\n\n    const errorMsg = validator.start();\n    this.setErrorMsg('passwordInputErrorMsg', errorMsg);\n    return;\n  }\n\n  onSubmit() {\n    const {\n      nameInputErrorMsg, emailInputErrorMsg, passwordInputErrorMsg\n    } = this.state;\n    const isNameInputPassed = nameInputErrorMsg === '' ? true : false;\n    const isEmailInputPassed = emailInputErrorMsg === '' ? true : false;\n    const isPasswordInputPassed = passwordInputErrorMsg === '' ? true : false;\n\n    if (isNameInputPassed && isEmailInputPassed && isPasswordInputPassed) {\n      this.context.store.dispatch(regist(\n        this.state.nameInputValue,\n\tthis.state.emailInputValue,\n\tthis.state.passwordInputValue\n      ));\n      return;\n    }\n  }\n\n  componentWillMount() {\n    if (sessionStorage.isUserLogined) {\n      this.props.history.push('/');\n      return;\n    }\n  }\n\n  render() {\n    return (\n      <Register \n        onNameInputChange={this.onNameInputChange}\n\tonEmailInputChange={this.onEmailInputChange}\n\tonPasswordInputChange={this.onPasswordInputChange}\n\tnameInputValue={this.state.nameInputValue}\n\temailInputValue={this.state.emailInputValue}\n\tpasswordInputValue={this.state.passwordInputValue}\n\tnameInputErrorMsg={this.state.nameInputErrorMsg}\n\temailInputErrorMsg={this.state.emailInputErrorMsg}\n\tpasswordInputErrorMsg={this.state.passwordInputErrorMsg}\n\tonSubmit={this.onSubmit}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.setState({\n      unsubscribe: this.context.store.subscribe(this.onChange)\n    });\n  }\n}\n\nRegisterContainer.contextTypes = {\n  store: PropTypes.object\n};\n\nexport default RegisterContainer;\n","// const baseUrl = 'https://www.wundertodo.xyz:1116';\nconst baseUrl = 'http://localhost:1115';\n\nexport default baseUrl;\n","import React from 'react';\n\nconst Login = ({\n  onEmailInputFocus, onEmailInputBlur, \n  onEmailInputChange, emailInputValue, emailPlaceholderClass,\n  onPasswordInputFocus, onPasswordInputBlur, \n  onPasswordInputChange, passwordInputValue, passwordPlaceholderClass,\n  onSignin\n}) => (\n  <div className=\"main\">\n    <div className=\"login\">\n      <div className=\"login-logo\">\n\t<i className=\"login-logo-icon\"></i>\n      </div>\n      <div className=\"login-inner\">\n\t<div className=\"login-item login-email\">\n\t  <i className=\"login-item-icon login-email-icon\"></i>\n\t  <input\n\t    type=\"text\" \n\t    autoFocus\n\t    className=\"login-item-input login-email-input\"\n\t    onFocus={onEmailInputFocus}\n\t    onBlur={onEmailInputBlur}\n\t    onChange={onEmailInputChange}\n\t    value={emailInputValue}\n\t  />\n\t  <span className={\"login-item-placeholder login-email-placeholder \"+ emailPlaceholderClass}>\n\t    Email\n\t  </span>\n\t</div>\n\t<div className=\"login-item login-password\">\n\t  <i className=\"login-item-icon login-password-icon\"></i>\n\t  <input \n\t    type=\"password\" \n\t    className=\"login-item-input login-password-input\"\n\t    onFocus={onPasswordInputFocus}\n\t    onBlur={onPasswordInputBlur}\n\t    onChange={onPasswordInputChange}\n\t    value={passwordInputValue}\n\t  />\n\t  <span className={\"login-item-placeholder login-password-placeholder \" + passwordPlaceholderClass}>\n\t    Password\n\t  </span>\n\t</div>\n\t<div className=\"login-item login-submit\">\n\t  <button type=\"button\" className=\"login-submit-signin\" onClick={onSignin}>\n\t    Sign in\n\t  </button>\n\t</div>\n\t<div className=\"login-item login-link\">\n\t  <a\n\t    href=\"/#/findpwd\" \n\t    className=\"login-link-item login-link-forgot\">\n\t    Forgot your password?\n\t  </a>\n\t  <a \n\t    href=\"/#/register\" \n\t    className=\"login-link-item login-link-register\">\n\t    Create Account\n\t  </a>\n\t</div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Login;\n","import {LOGIN_STARTED, LOGIN_SUCCESS, LOGIN_FAILURE} from './actionTypes';\nimport {baseUrl, apis} from '../config/';\n\nexport const loginStarted = () => ({\n  type: LOGIN_STARTED\n});\n\nexport const loginSuccess = (resJson) => ({\n  type: LOGIN_SUCCESS,\n  resJson\n});\n\nexport const loginFailure = (error) => ({\n  type: LOGIN_FAILURE,\n  error\n});\n\nexport const login = (email, password) => {\n  return (dispatch) => {\n    loginStarted();\n\n    fetch(`${baseUrl}${apis.login.path}`, {\n      method: 'POST',\n      headers: {\n\t'Content-Type': 'application/json;charset=UTF-8'\n      },\n      body: JSON.stringify({email, password})\n    }).then(res => {\n      if (res.status === 200) return res.json();\n      else dispatch(loginFailure());\n    }).then(resJson => {\n      dispatch(loginSuccess(resJson));\n    }).catch(error => {\n      dispatch(loginFailure(error));\n    });\n  };\n};\n","export const LOGIN_STARTED = 'LOGIN/STARTED';\nexport const LOGIN_SUCCESS = 'LOGIN/SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN/FAILURE';\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Login from './login';\nimport {login} from '../actions';\n\nimport './style.css';\n\nclass LoginContainer extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onChange = this.onChange.bind(this);\n    this.onEmailInputFocus = this.onEmailInputFocus.bind(this);\n    this.onEmailInputBlur = this.onEmailInputBlur.bind(this);\n    this.onEmailInputChange = this.onEmailInputChange.bind(this);\n    this.onPasswordInputFocus = this.onPasswordInputFocus.bind(this);\n    this.onPasswordInputBlur = this.onPasswordInputBlur.bind(this);\n    this.onPasswordInputChange = this.onPasswordInputChange.bind(this);\n    this.onSignin = this.onSignin.bind(this);\n\n    this.state = {\n      emailInputFocused: false,\n      passwordInputFocused: false,\n      emailInputValue: '',\n      passwordInputValue: ''\n    };\n  }\n\n  onChange() {\n    const {status, isLogined,} = this.context.store.getState().login;\n    if (status === 'success' && isLogined) {\n      const {username, cryemail, crypwd} = this.context.store.getState().login;\n      sessionStorage.setItem('isUserLogined', true);\n      sessionStorage.setItem('username', username);\n      sessionStorage.setItem('cryemail', cryemail);\n      sessionStorage.setItem('crypwd', crypwd);\n\n      this.props.history.replace('/');\n      return;\n    }\n  }\n\n  onEmailInputFocus() {\n    this.setState({\n      emailInputFocused: true\n    });\n  }\n\n  onEmailInputBlur() {\n    if (this.state.emailInputValue.trim() !== '') return;\n    this.setState({\n      emailInputFocused: false\n    });\n  }\n\n  onEmailInputChange(event) {\n    this.setState({\n      emailInputValue: event.target.value\n    });\n  }\n\n  onPasswordInputFocus() {\n    this.setState({\n      passwordInputFocused: true\n    });\n  }\n\n  onPasswordInputBlur() {\n    if (this.state.passwordInputValue.trim() !== '') return;\n    this.setState({\n      passwordInputFocused: false\n    });\n  }\n\n  onPasswordInputChange(event) {\n    this.setState({\n      passwordInputValue: event.target.value\n    });\n  }\n\n  onSignin() {\n    const {\n      emailInputValue,\n      passwordInputValue\n    } = this.state;\n\n    if (emailInputValue === '' || passwordInputValue === '') {\n      alert('请完善登录信息');\n      console.log('请完善登录信息');\n      return;\n    }\n\n    // 派发 action...\n    this.context.store.dispatch(login(emailInputValue, passwordInputValue));\n  }\n\n  componentWillMount() {\n    if (sessionStorage.isUserLogined) {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    return (\n      <Login \n\tonEmailInputFocus={this.onEmailInputFocus}\n\tonEmailInputBlur={this.onEmailInputBlur}\n\tonEmailInputChange={this.onEmailInputChange}\n\temailInputValue={this.state.emailInputValue}\n\temailPlaceholderClass={this.state.emailInputFocused ? 'active' : ''}\n\tonPasswordInputFocus={this.onPasswordInputFocus}\n\tonPasswordInputBlur={this.onPasswordInputBlur}\n\tonPasswordInputChange={this.onPasswordInputChange}\n\tpasswordInputValue={this.state.passwordInputValue}\n\tpasswordPlaceholderClass={this.state.passwordInputFocused ? 'active' : ''}\n\tonSignin={this.onSignin}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.setState({\n      unsubscribe: this.context.store.subscribe(this.onChange)\n    });\n  }\n\n  componentWillUnmount() {\n    // this.state.unsubscribe()\n  }\n}\n\nLoginContainer.contextTypes = {\n  store: PropTypes.object\n};\n\nexport default LoginContainer;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {reducer as registerReducer} from './register/';\nimport {reducer as loginReducer} from './login/';\n\nconst reducer = combineReducers({\n  register: registerReducer,\n  login: loginReducer\n});\n\nexport default createStore(reducer, applyMiddleware(thunkMiddleware));\n","import {\n  REGIST_STARTED, REGIST_SUCCESS, REGIST_FAILURE\n} from './actionTypes';\nimport * as Status from './status';\n\nexport default (state = {status: Status.LOADING}, action) => {\n  switch(action.type) {\n    case REGIST_STARTED:\n      return {status: Status.LOADING};\n    case REGIST_SUCCESS:\n      return {\n\tstatus: Status.SUCCESS,\n\t...action.resJson\n      };\n    case REGIST_FAILURE:\n      return {\n\tstatus: Status.FAILURE,\n\t...action.error\n      };\n    default:\n      return state;\n  }\n};\n","export const LOADING = 'loading';\nexport const SUCCESS = 'success';\nexport const FAILURE = 'failure';\n","import {LOGIN_STARTED, LOGIN_SUCCESS, LOGIN_FAILURE} from './actionTypes';\nimport * as Status from './status';\n\nexport default (state = {status: Status.LOADING}, action) => {\n  switch(action.type) {\n    case LOGIN_STARTED:\n      return {status: Status.LOADING};\n    case LOGIN_SUCCESS:\n      return {\n\tstatus: Status.SUCCESS,\n\t...action.resJson\n      };\n    case LOGIN_FAILURE:\n      return {\n        status: Status.FAILURE,\n\t...action.error\n      };\n    default:\n      return state\n  }\n};\n","export const LOADING = 'loading';\nexport const SUCCESS = 'success';\nexport const FAILURE = 'failure';\n","import React, {Component} from 'react';\n\nimport './style.css';\n\nclass SearchTollbar extends Component {\n  render() {\n    return (\n      <div className=\"search-toolbar\">\n\t<div className=\"search-menu-wrapper\">\n\t  <i className=\"search-menu-icon\"></i>\n\t</div>\n\t<div className=\"search-input-wrapper\">\n\t  <input className=\"search-input\" type=\"text\" />\n\t</div>\n\t<div className=\"search-icon-wrapper\">\n\t  <i className=\"search-icon\"></i>\n\t</div>\n      </div>\n    );\n  }\n}\n\nexport default SearchTollbar;\n","import React, {Component} from 'react';\n\nimport './style.css';\n\nclass UserToolbar extends Component {\n  render() {\n    return (\n      <div className=\"user-toolbar\">\n\t<div className=\"user\">\n\t  <i className=\"user-avatar\"></i>\n\t  <span className=\"user-name\">rf.wangchn</span>\n\t  <i className=\"user-arrow-icon\"></i>\n\t  <span className=\"sync\"></span>\n\t</div>\n\t<div className=\"stream-counts\">\n\t  <i className=\"bell-icon\"></i>\n\t  <i className=\"conversation-icon\"></i>\n\t</div>\n      </div>\n    );\n  }\n}\n\nexport default UserToolbar;\n","import React, {Component} from 'react';\n\nimport './style.css';\n\nclass ListsToolbar extends Component {\n  render() {\n    return (\n      <div className=\"lists-toolbar\">ListsToolbar Component</div>\n    );\n  }\n}\n\nexport default ListsToolbar;\n","import React, {Component} from 'react';\n\nimport './style.css';\n\nclass CreateToolbar extends Component {\n  render() {\n    return (\n      <div className=\"create-toolbar\">CreateToolbar Component</div>\n    );\n  }\n}\n\nexport default CreateToolbar;\n","import React, {Component} from 'react';\nimport {view as SearchToolbar} from './searchToolbar/';\nimport {view as UserToolbar} from './userToolbar/';\nimport {view as ListsToolbar} from './listsToolbar/';\nimport {view as CreateToolbar} from './createToolbar/';\n\nimport './style.css';\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <div className=\"navigation active\">\n\t<div className=\"navigation-inner\">\n\t  <SearchToolbar />\n\t  <UserToolbar />\n\t  <ListsToolbar />\n\t  <CreateToolbar />\n\t</div>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, {Component} from 'react';\n\nclass Content extends Component {\n  render() {\n    return (\n      <div className=\"content\">Content Component</div>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from 'react';\nimport {Route} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {view as Register} from './register/';\nimport {view as Login} from './login/';\nimport {view as Navigation} from './navigation/';\nimport {view as Content} from './content/';\n// import logo from './logo.svg';\nimport './App.css';\n// import TestFetch from './testFetch';\n\nclass Main extends Component {\n  componentWillMount() {\n    if (!sessionStorage.isUserLogined) {\n      this.props.history.replace('/login');\n      return;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n\t<Navigation />\n\t<Content />\n      </div>\n    );\n  }\n}\n\nMain.contextTypes = {\n  store: PropTypes.object\n};\n\nconst routes = [\n  {\n    path: '/register',\n    component: Register\n  },\n  {\n    path: '/login',\n    component: Login\n  },\n  {\n    exact: true,\n    path: '/',\n    component: Main\n  }\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\t{\n\t  routes.map((item, index) => {\n\t    return (\n\t      <Route \n\t\tkey={index}\n\t\texact={item.exact}\n\t\tpath={item.path}\n\t\tcomponent={item.component}\n\t      />\n\t    );\n\t  })\n\t}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './Store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}