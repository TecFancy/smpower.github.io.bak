{"version":3,"sources":["register/views/register.js","register/actions.js","register/actionTypes.js","register/views/registerContainer.js","login/views/login.js","login/actions.js","login/actionTypes.js","login/views/loginContainer.js","Store.js","register/reducer.js","register/status.js","login/reducer.js","login/status.js","navigation/views/searchToolbar/views/searchToolbar.js","navigation/views/userToolbar/views/userToolbar.js","navigation/views/listsToolbar/views/listsToolbar.js","navigation/views/createToolbar/views/createToolbar.js","navigation/views/navigation.js","content/views/content.js","App.js","serviceWorker.js","index.js"],"names":["Register","_ref","onNameInputChange","onEmailInputChange","onPasswordInputChange","nameInputValue","emailInputValue","passwordInputValue","onSubmit","react_default","a","createElement","className","type","placeholder","onChange","value","onClick","href","registFailure","err","RegisterContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","bind","assertThisInitialized","state","_this$context$store$g","context","store","getState","register","status","isRegisted","props","history","push","event","setState","target","trim","username","email","password","dispatch","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","json","resJson","registSuccess","catch","unsubscribe","subscribe","Component","contextTypes","PropTypes","object","Login","onEmailInputFocus","onEmailInputBlur","emailPlaceholderClass","onPasswordInputFocus","onPasswordInputBlur","passwordPlaceholderClass","onSignin","autoFocus","onFocus","onBlur","loginFailure","error","LoginContainer","emailInputFocused","passwordInputFocused","login","isLogined","_this$state","alert","console","log","loginSuccess","reducer","combineReducers","length","undefined","action","objectSpread","createStore","applyMiddleware","thunkMiddleware","SearchTollbar","UserToolbar","ListsToolbar","CreateToolbar","Navigation","searchToolbar","userToolbar","listsToolbar","createToolbar","Content","routes","path","component","exact","navigation","content","App","map","item","index","Route","key","Boolean","window","location","hostname","match","ReactDOM","render","es","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa2ed74b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Register = ({\n  onNameInputChange, onEmailInputChange, onPasswordInputChange,\n  nameInputValue, emailInputValue, passwordInputValue,\n  onSubmit\n}) => (\n  <div className=\"main\">\n    <div className=\"register\">\n      <div className=\"register-logo\">\n\t<i className=\"register-logo-icon\"></i>\n\t<h1 className=\"register-logo-title\">Get Wundertodo For Free</h1>\n      </div>\n      <div className=\"register-inner\">\n\t<div className=\"register-item register-name\">\n\t  <i className=\"register-item-icon register-name-icon\"></i>\n\t  <input\n\t    type=\"text\"\n\t    className=\"register-item-input register-name-input\"\n\t    placeholder=\"Name\" \n\t    onChange={onNameInputChange}\n\t    value={nameInputValue}\n\t  />\n\t</div>\n\t<div className=\"register-item register-email\">\n\t  <i className=\"register-item-icon register-email-icon\"></i>\n\t  <input\n\t    type=\"text\"\n\t    className=\"register-item-input register-email-input\"\n\t    placeholder=\"Email\" \n\t    onChange={onEmailInputChange}\n\t    value={emailInputValue}\n\t  />\n\t</div>\n\t<div className=\"register-item register-password\">\n\t  <i className=\"register-item-icon register-password-icon\"></i>\n\t  <input\n\t    type=\"password\"\n\t    className=\"register-item-input register-password-input\"\n\t    placeholder=\"Password\" \n\t    onChange={onPasswordInputChange}\n\t    value={passwordInputValue}\n\t  />\n\t</div>\n\t<div className=\"register-item register-submit\">\n\t  <button \n\t    type=\"button\" \n\t    className=\"register-submit-btn\" \n\t    onClick={onSubmit}>Create Free Account\n\t  </button>\n\t</div>\n      </div>\n      <div className=\"register-login\">\n\t<span className=\"register-login-text\">\n\t  Have an account already? \n\t  <a href=\"/#/login\">Sign in</a>\n\t</span>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Register;\n","import {\n  REGIST_STARTED, REGIST_SUCCESS, REGIST_FAILURE\n} from './actionTypes';\n\nconst registStarted = () => ({\n  type: REGIST_STARTED\n});\n\nconst registSuccess = (resJson) => ({\n  type: REGIST_SUCCESS,\n  resJson\n});\n\nconst registFailure = (err) => ({\n  type: REGIST_FAILURE,\n  err\n});\n\nexport const regist = (username, email, password) => {\n  return (dispatch) => {\n    dispatch(registStarted());\n\n    fetch('http://47.110.53.31:1115/todo/regist', {\n      method: 'POST',\n      headers: {\n\t'Content-Type': 'application/json;charset=UTF-8'\n      },\n      body: JSON.stringify({username, email, password})\n    }).then(res => {\n      if (res.status === 200) return res.json();\n      else dispatch(registFailure());\n    }).then(resJson => {\n      dispatch(registSuccess(resJson));\n    }).catch(err => {\n      dispatch(registFailure(err));\n    });\n  };\n};\n","export const REGIST_STARTED = 'REGIST/STARTED';\nexport const REGIST_SUCCESS = 'REGIST/SUCCESS';\nexport const REGIST_FAILURE = 'REGIST/FAILURE';\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Register from './register';\nimport {regist} from '../actions';\n\nimport './style.css';\n\nclass RegisterContainer extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onChange = this.onChange.bind(this);\n    this.onNameInputChange = this.onNameInputChange.bind(this);\n    this.onEmailInputChange = this.onEmailInputChange.bind(this);\n    this.onPasswordInputChange = this.onPasswordInputChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      nameInputValue: '',\n      emailInputValue: '',\n      passwordInputValue: ''\n    };\n  }\n\n  onChange() {\n    const {status, isRegisted} = this.context.store.getState().register;\n\n    if (status === 'success' && isRegisted) this.props.history.push('/login');\n  }\n\n  onNameInputChange(event) {\n    this.setState({\n      nameInputValue: event.target.value.trim()\n    });\n  }\n\n  onEmailInputChange(event) {\n    this.setState({\n      emailInputValue: event.target.value.trim()\n    });\n  }\n\n  onPasswordInputChange(event) {\n    this.setState({\n      passwordInputValue: event.target.value.trim()\n    });\n  }\n\n  onSubmit() {\n    this.context.store.dispatch(regist(\n      this.state.nameInputValue,\n      this.state.emailInputValue,\n      this.state.passwordInputValue\n    ));\n  }\n\n  render() {\n    return (\n      <Register \n        onNameInputChange={this.onNameInputChange}\n\tonEmailInputChange={this.onEmailInputChange}\n\tonPasswordInputChange={this.onPasswordInputChange}\n\tnameInputValue={this.state.nameInputValue}\n\temailInputValue={this.state.emailInputValue}\n\tpasswordInputValue={this.state.passwordInputValue}\n\tonSubmit={this.onSubmit}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.setState({\n      unsubscribe: this.context.store.subscribe(this.onChange)\n    });\n  }\n\n  componentWillUnmount() {\n    this.state.unsubscribe()\n  }\n}\n\nRegisterContainer.contextTypes = {\n  store: PropTypes.object\n};\n\nexport default RegisterContainer;\n","import React from 'react';\n\nconst Login = ({\n  onEmailInputFocus, onEmailInputBlur, \n  onEmailInputChange, emailInputValue, emailPlaceholderClass,\n  onPasswordInputFocus, onPasswordInputBlur, \n  onPasswordInputChange, passwordInputValue, passwordPlaceholderClass,\n  onSignin\n}) => (\n  <div className=\"main\">\n    <div className=\"login\">\n      <div className=\"login-logo\">\n\t<i className=\"login-logo-icon\"></i>\n      </div>\n      <div className=\"login-inner\">\n\t<div className=\"login-item login-email\">\n\t  <i className=\"login-item-icon login-email-icon\"></i>\n\t  <input\n\t    type=\"text\" \n\t    autoFocus\n\t    className=\"login-item-input login-email-input\"\n\t    onFocus={onEmailInputFocus}\n\t    onBlur={onEmailInputBlur}\n\t    onChange={onEmailInputChange}\n\t    value={emailInputValue}\n\t  />\n\t  <span className={\"login-item-placeholder login-email-placeholder \"+ emailPlaceholderClass}>\n\t    Email\n\t  </span>\n\t</div>\n\t<div className=\"login-item login-password\">\n\t  <i className=\"login-item-icon login-password-icon\"></i>\n\t  <input \n\t    type=\"password\" \n\t    className=\"login-item-input login-password-input\"\n\t    onFocus={onPasswordInputFocus}\n\t    onBlur={onPasswordInputBlur}\n\t    onChange={onPasswordInputChange}\n\t    value={passwordInputValue}\n\t  />\n\t  <span className={\"login-item-placeholder login-password-placeholder \" + passwordPlaceholderClass}>\n\t    Password\n\t  </span>\n\t</div>\n\t<div className=\"login-item login-submit\">\n\t  <button type=\"button\" className=\"login-submit-signin\" onClick={onSignin}>\n\t    Sign in\n\t  </button>\n\t</div>\n\t<div className=\"login-item login-link\">\n\t  <a\n\t    href=\"/#/findpwd\" \n\t    className=\"login-link-item login-link-forgot\">\n\t    Forgot your password?\n\t  </a>\n\t  <a \n\t    href=\"/#/register\" \n\t    className=\"login-link-item login-link-register\">\n\t    Create Account\n\t  </a>\n\t</div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Login;\n","import {LOGIN_STARTED, LOGIN_SUCCESS, LOGIN_FAILURE} from './actionTypes';\n\nexport const loginStarted = () => ({\n  type: LOGIN_STARTED\n});\n\nexport const loginSuccess = (resJson) => ({\n  type: LOGIN_SUCCESS,\n  resJson\n});\n\nexport const loginFailure = (error) => ({\n  type: LOGIN_FAILURE,\n  error\n});\n\nexport const login = (email, password) => {\n  return (dispatch) => {\n    loginStarted();\n\n    fetch('/todo/login', {\n      method: 'POST',\n      headers: {\n\t'Content-Type': 'application/json;charset=UTF-8'\n      },\n      body: JSON.stringify({email, password})\n    }).then(res => {\n      if (res.status === 200) return res.json();\n      else dispatch(loginFailure());\n    }).then(resJson => {\n      dispatch(loginSuccess(resJson));\n    }).catch(error => {\n      dispatch(loginFailure(error));\n    });\n  };\n};\n","export const LOGIN_STARTED = 'LOGIN/STARTED';\nexport const LOGIN_SUCCESS = 'LOGIN/SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN/FAILURE';\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Login from './login';\nimport {login} from '../actions';\n\nimport './style.css';\n\nclass LoginContainer extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onChange = this.onChange.bind(this);\n    this.onEmailInputFocus = this.onEmailInputFocus.bind(this);\n    this.onEmailInputBlur = this.onEmailInputBlur.bind(this);\n    this.onEmailInputChange = this.onEmailInputChange.bind(this);\n    this.onPasswordInputFocus = this.onPasswordInputFocus.bind(this);\n    this.onPasswordInputBlur = this.onPasswordInputBlur.bind(this);\n    this.onPasswordInputChange = this.onPasswordInputChange.bind(this);\n    this.onSignin = this.onSignin.bind(this);\n\n    this.state = {\n      emailInputFocused: false,\n      passwordInputFocused: false,\n      emailInputValue: '',\n      passwordInputValue: ''\n    };\n  }\n\n  onChange() {\n    const {status, isLogined} = this.context.store.getState().login;\n\n    if (status === 'success' && isLogined) this.props.history.push('/main');\n  }\n\n  onEmailInputFocus() {\n    this.setState({\n      emailInputFocused: true\n    });\n  }\n\n  onEmailInputBlur() {\n    if (this.state.emailInputValue.trim() !== '') return;\n    this.setState({\n      emailInputFocused: false\n    });\n  }\n\n  onEmailInputChange(event) {\n    this.setState({\n      emailInputValue: event.target.value\n    });\n  }\n\n  onPasswordInputFocus() {\n    this.setState({\n      passwordInputFocused: true\n    });\n  }\n\n  onPasswordInputBlur() {\n    if (this.state.passwordInputValue.trim() !== '') return;\n    this.setState({\n      passwordInputFocused: false\n    });\n  }\n\n  onPasswordInputChange(event) {\n    this.setState({\n      passwordInputValue: event.target.value\n    });\n  }\n\n  onSignin() {\n    const {\n      emailInputValue,\n      passwordInputValue\n    } = this.state;\n\n    if (emailInputValue === '' || passwordInputValue === '') {\n      alert('请完善登录信息');\n      console.log('请完善登录信息');\n      return;\n    }\n\n    // 派发 action...\n    this.context.store.dispatch(login(emailInputValue, passwordInputValue));\n  }\n\n  render() {\n    return (\n      <Login \n\tonEmailInputFocus={this.onEmailInputFocus}\n\tonEmailInputBlur={this.onEmailInputBlur}\n\tonEmailInputChange={this.onEmailInputChange}\n\temailInputValue={this.state.emailInputValue}\n\temailPlaceholderClass={this.state.emailInputFocused ? 'active' : ''}\n\tonPasswordInputFocus={this.onPasswordInputFocus}\n\tonPasswordInputBlur={this.onPasswordInputBlur}\n\tonPasswordInputChange={this.onPasswordInputChange}\n\tpasswordInputValue={this.state.passwordInputValue}\n\tpasswordPlaceholderClass={this.state.passwordInputFocused ? 'active' : ''}\n\tonSignin={this.onSignin}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.setState({\n      unsubscribe: this.context.store.subscribe(this.onChange)\n    });\n  }\n\n  componentWillUnmount() {\n    this.state.unsubscribe()\n  }\n}\n\nLoginContainer.contextTypes = {\n  store: PropTypes.object\n};\n\nexport default LoginContainer;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {reducer as registerReducer} from './register/';\nimport {reducer as loginReducer} from './login/';\n\nconst reducer = combineReducers({\n  register: registerReducer,\n  login: loginReducer\n});\n\nexport default createStore(reducer, applyMiddleware(thunkMiddleware));\n","import {\n  REGIST_STARTED, REGIST_SUCCESS, REGIST_FAILURE\n} from './actionTypes';\nimport * as Status from './status';\n\nexport default (state = {status: Status.LOADING}, action) => {\n  switch(action.type) {\n    case REGIST_STARTED:\n      return {status: Status.LOADING};\n    case REGIST_SUCCESS:\n      return {\n\tstatus: Status.SUCCESS,\n\t...action.resJson\n      };\n    case REGIST_FAILURE:\n      return {\n\tstatus: Status.FAILURE,\n\t...action.error\n      };\n    default:\n      return state;\n  }\n};\n","export const LOADING = 'loading';\nexport const SUCCESS = 'success';\nexport const FAILURE = 'failure';\n","import {LOGIN_STARTED, LOGIN_SUCCESS, LOGIN_FAILURE} from './actionTypes';\nimport * as Status from './status';\n\nexport default (state = {status: Status.LOADING}, action) => {\n  switch(action.type) {\n    case LOGIN_STARTED:\n      return {status: Status.LOADING};\n    case LOGIN_SUCCESS:\n      return {\n\tstatus: Status.SUCCESS,\n\t...action.resJson\n      };\n    case LOGIN_FAILURE:\n      return {\n        status: Status.FAILURE,\n\t...action.error\n      };\n    default:\n      return state\n  }\n};\n","export const LOADING = 'loading';\nexport const SUCCESS = 'success';\nexport const FAILURE = 'failure';\n","import React, {Component} from 'react';\n\nimport './style.css';\n\nclass SearchTollbar extends Component {\n  render() {\n    return (\n      <div className=\"search-toolbar\">\n\t<div className=\"search-menu-wrapper\">\n\t  <i className=\"search-menu-icon\"></i>\n\t</div>\n\t<div className=\"search-input-wrapper\">\n\t  <input className=\"search-input\" type=\"text\" />\n\t</div>\n\t<div className=\"search-icon-wrapper\">\n\t  <i className=\"search-icon\"></i>\n\t</div>\n      </div>\n    );\n  }\n}\n\nexport default SearchTollbar;\n","import React, {Component} from 'react';\n\nimport './style.css';\n\nclass UserToolbar extends Component {\n  render() {\n    return (\n      <div className=\"user-toolbar\">\n\t<div className=\"user\">\n\t  <i className=\"user-avatar\"></i>\n\t  <span className=\"user-name\">rf.wangchn</span>\n\t  <i className=\"user-arrow-icon\"></i>\n\t  <span className=\"sync\"></span>\n\t</div>\n\t<div className=\"stream-counts\">\n\t  <i className=\"bell-icon\"></i>\n\t  <i className=\"conversation-icon\"></i>\n\t</div>\n      </div>\n    );\n  }\n}\n\nexport default UserToolbar;\n","import React, {Component} from 'react';\n\nimport './style.css';\n\nclass ListsToolbar extends Component {\n  render() {\n    return (\n      <div className=\"lists-toolbar\">ListsToolbar Component</div>\n    );\n  }\n}\n\nexport default ListsToolbar;\n","import React, {Component} from 'react';\n\nimport './style.css';\n\nclass CreateToolbar extends Component {\n  render() {\n    return (\n      <div className=\"create-toolbar\">CreateToolbar Component</div>\n    );\n  }\n}\n\nexport default CreateToolbar;\n","import React, {Component} from 'react';\nimport {view as SearchToolbar} from './searchToolbar/';\nimport {view as UserToolbar} from './userToolbar/';\nimport {view as ListsToolbar} from './listsToolbar/';\nimport {view as CreateToolbar} from './createToolbar/';\n\nimport './style.css';\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <div className=\"navigation active\">\n\t<div className=\"navigation-inner\">\n\t  <SearchToolbar />\n\t  <UserToolbar />\n\t  <ListsToolbar />\n\t  <CreateToolbar />\n\t</div>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, {Component} from 'react';\n\nclass Content extends Component {\n  render() {\n    return (\n      <div className=\"content\">Content Component</div>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from 'react';\nimport {Route} from 'react-router-dom';\nimport {view as Register} from './register/';\nimport {view as Login} from './login/';\nimport {view as Navigation} from './navigation/';\nimport {view as Content} from './content/';\n// import logo from './logo.svg';\nimport './App.css';\n// import TestFetch from './testFetch';\n\nconst Main = () => (\n  <div className=\"main\">\n    <Navigation />\n    <Content />\n    {\n      /*<header className=\"App-header\">\n\t  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t  <p>\n\t    Edit <code>src/App.js</code> and save to reload.\n\t  </p>\n\t  <a\n\t    className=\"App-link\"\n\t    href=\"https://reactjs.org\"\n\t    target=\"_blank\"\n\t    rel=\"noopener noreferrer\"\n\t  >\n\t    Learn React\n\t  </a>\n\t</header>\n\t<TestFetch />*/\n    }\n  </div>\n);\n\nconst routes = [\n  {\n    path: '/register',\n    component: Register\n  },\n  {\n    path: '/login',\n    component: Login\n  },\n  {\n    exact: true,\n    path: '/main',\n    component: Main\n  }\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\t{\n\t  routes.map((item, index) => {\n\t    return (\n\t      <Route \n\t\tkey={index}\n\t\texact={item.exact}\n\t\tpath={item.path}\n\t\tcomponent={item.component}\n\t      />\n\t    );\n\t  })\n\t}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './Store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}